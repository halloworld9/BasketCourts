networks:
  backend:
    name: backend
    driver: bridge


services:

  database:
    image: postgres:16.3
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file: ./config.env
    networks:
      - backend
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./basket_courts-data:/var/lib/postgresql/data

  gateway:
    image: "halloworld9/gateway-service:latest"
    ports:
      - "8080:8080"
    networks:
      - backend
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      auth:
        condition: service_healthy
        restart: true
    env_file: ./config.env

  court:
    image: "halloworld9/courts-service:latest"
    networks:
      - backend
    depends_on:
      database:
        condition: service_healthy
        restart: true

    healthcheck:
      test: "curl --fail --silent localhost:3000/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    env_file: ./config.env

  auth:
    image: "halloworld9/auth-server-service:latest"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1" ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
       - backend
    env_file: ./config.env
    ports:
      - "9000:9000"
    depends_on:
      database:
        condition: service_healthy
        restart: true

  review:
    image: "halloworld9/review-service:latest"
    env_file: ./config.env
    networks:
      - backend
    depends_on:
      database:
        condition: service_healthy
        restart: true

  visit:
    image: "halloworld9/visit-service:latest"
    env_file: ./config.env
    networks:
      - backend
    depends_on:
      database:
        condition: service_healthy
        restart: true